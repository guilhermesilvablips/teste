{
  "data": {
    "createdAt": "2024-08-22T13:42:04.339Z",
    "updatedAt": "2024-10-15T12:26:50.352Z",
    "id": "ItTgowfy5lg8nZkd",
    "name": "Teste Assistente Attachments",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "url": "=https://api.openai.com/v1/threads/{{ $('Mensagem').item.json.thread_id }}/runs/{{ $json[\"id\"] }}",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "openAiApi",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "OpenAI-Beta",
                "value": "assistants=v2"
              }
            ]
          },
          "options": {
            "timeout": 10000
          }
        },
        "id": "cb668626-ad4a-4e81-9797-ef174d6982a2",
        "name": "Get Run Status",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [
          1020,
          1140
        ],
        "retryOnFail": true,
        "credentials": {
          "openAiApi": {
            "id": "erBLFgb3zHf0C8ux",
            "name": "Open Ai - Cobrança"
          }
        }
      },
      {
        "parameters": {
          "amount": 2,
          "unit": "seconds"
        },
        "id": "a9c3562d-7249-46c7-96a0-92972901a267",
        "name": "Wait",
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1,
        "position": [
          1620,
          1380
        ],
        "webhookId": "8811742f-db12-48ec-a589-b4fe235ebc7b"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "=https://api.openai.com/v1/threads/{{ $('Mensagem').item.json.thread_id }}/messages",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "openAiApi",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "OpenAI-Beta",
                "value": "assistants=v2"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "=json",
          "bodyParameters": {
            "parameters": [
              {}
            ]
          },
          "jsonBody": "={\n    \"role\": \"user\",\n    \"content\": \"{{ $json.mensagem }}\"\n}",
          "options": {}
        },
        "id": "40d1f82a-8395-4144-81e2-15c1a97e8c31",
        "name": "Criar a Mensagem",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [
          480,
          1140
        ],
        "credentials": {
          "openAiApi": {
            "id": "erBLFgb3zHf0C8ux",
            "name": "Open Ai - Cobrança"
          }
        },
        "onError": "continueErrorOutput"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict"
            },
            "conditions": [
              {
                "id": "98a5af91-f163-4672-9d53-9bee20c97303",
                "leftValue": "={{ $json.last_error.code }}",
                "rightValue": "rate_limit_exceeded",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "id": "e22f4bef-be72-4367-acab-cd7ae535ad6a",
        "name": "Se for rate_limit_exceeded",
        "type": "n8n-nodes-base.if",
        "typeVersion": 2,
        "position": [
          1880,
          1240
        ]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "=https://api.openai.com/v1/threads/{{ $('Mensagem').item.json.thread_id }}/runs",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "openAiApi",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "OpenAI-Beta",
                "value": "assistants=v2"
              }
            ]
          },
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "assistant_id",
                "value": "={{ $('Mensagem').item.json.assistant_id }}"
              },
              {
                "name": "parallel_tool_calls",
                "value": "={{ false }}"
              }
            ]
          },
          "options": {}
        },
        "id": "1b0d8034-d22c-4ac4-8592-c06b744cd239",
        "name": "Run Assistant",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [
          720,
          1140
        ],
        "executeOnce": false,
        "retryOnFail": true,
        "credentials": {
          "openAiApi": {
            "id": "erBLFgb3zHf0C8ux",
            "name": "Open Ai - Cobrança"
          }
        }
      },
      {
        "parameters": {
          "amount": "={{ parseInt($json.last_error.message.match(/(\\d+(\\.\\d+)?)s/)[1]) * 2}}"
        },
        "id": "d2307cd4-d08e-4fd6-bdf1-4d5298367e9f",
        "name": "Espera o tempo determinado",
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          1620,
          1580
        ],
        "webhookId": "89b3350b-829b-4d43-98f4-cfbbfdf7a131"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "9be99488-b9db-4adf-bd48-7d7109f34e01",
                "name": "message",
                "value": "={{ $('Concatena todas mensagens').item.json.message }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "id": "6fd51ef0-14a4-477f-9240-978438937132",
        "name": "Coloca novamente a mensagem para re-processar",
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.3,
        "position": [
          2100,
          1680
        ]
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict"
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.status }}",
                      "rightValue": "queued",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "queued"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict"
                  },
                  "conditions": [
                    {
                      "id": "ecd44d0c-b93e-4977-ae74-8c87eae4cf20",
                      "leftValue": "={{ $json.status }}",
                      "rightValue": "in_progress",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "in_progress"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict"
                  },
                  "conditions": [
                    {
                      "id": "6f6841ae-8845-4659-9e06-06e5bd4843df",
                      "leftValue": "={{ $json.status }}",
                      "rightValue": "failed",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "failed"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict"
                  },
                  "conditions": [
                    {
                      "id": "6cc26ecf-79af-4d91-bb3f-a617646e3fc8",
                      "leftValue": "={{ $json.status }}",
                      "rightValue": "completed",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "completed"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict"
                  },
                  "conditions": [
                    {
                      "id": "0f93b1ee-1a9c-4586-86f8-55e0a180ca04",
                      "leftValue": "={{ $json.status }}",
                      "rightValue": "expired",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "expired"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict"
                  },
                  "conditions": [
                    {
                      "id": "5e7ecc7f-ecee-439c-aa0e-80a7e110726a",
                      "leftValue": "={{ $json.status }}",
                      "rightValue": "=requires_action",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "requires_action"
              }
            ]
          },
          "options": {}
        },
        "id": "b5c3dcd8-1ae3-4a7b-a389-06919b70ea98",
        "name": "Switch",
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3,
        "position": [
          1260,
          1120
        ]
      },
      {
        "parameters": {
          "url": "=https://api.openai.com/v1/threads/{{ $('Mensagem').item.json.thread_id }}/messages?order=desc",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "openAiApi",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "OpenAI-Beta",
                "value": "assistants=v2"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "options": {}
        },
        "id": "3e910660-6535-4e2b-8109-dc268861e25c",
        "name": "Pega resposta",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [
          1880,
          1080
        ],
        "credentials": {
          "openAiApi": {
            "id": "erBLFgb3zHf0C8ux",
            "name": "Open Ai - Cobrança"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "38d9ddb8-e1a7-4a95-88b4-a5d8a7cea556",
                "name": "mensagem",
                "value": "={{ $('When chat message received').item.json.chatInput}}",
                "type": "string"
              },
              {
                "id": "23c41579-58af-449b-8bda-f9ee4e066a82",
                "name": "thread_id",
                "value": "=thread_q43DVnFQ4OvE82CCIireHv1J",
                "type": "string"
              },
              {
                "id": "c4b984e6-5b84-4c27-bec6-6413a071bb83",
                "name": "assistant_id",
                "value": "asst_jmMfZzaRR2Y0ZB9EKGwtqbe8",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "id": "cdf3a206-cd4d-432e-844f-0cf03dbf15ab",
        "name": "Mensagem",
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          100,
          1140
        ]
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "a4f67e36-5596-441d-8f2c-e26efc57409a",
                "name": "chat",
                "value": "={{ $json.data[0].content[0].text.value }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "id": "5f0ceeae-1635-45c5-b5b4-0815a1ad4850",
        "name": "Resposta Chat",
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          2100,
          1080
        ]
      },
      {
        "parameters": {
          "language": "python",
          "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n  tipo = item.binary.data.fileExtension\n  item.binary.data.fileName = 'Arquivo.' + tipo\nreturn _input.all()"
        },
        "id": "986d8ed1-95a5-4469-8b80-47553326fc95",
        "name": "Code",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          160,
          700
        ]
      },
      {
        "parameters": {
          "url": "https://storage.hyperflow.global/whatsapp/1298788331506512",
          "options": {}
        },
        "id": "7d5225fc-33e8-436e-a48f-47696e7600ae",
        "name": "Pegar o arquivo pelo link",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -120,
          700
        ]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.openai.com/v1/files",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "openAiApi",
          "sendBody": true,
          "contentType": "multipart-form-data",
          "bodyParameters": {
            "parameters": [
              {
                "name": "purpose",
                "value": "assistants"
              },
              {
                "parameterType": "formBinaryData",
                "name": "file",
                "inputDataFieldName": "data"
              }
            ]
          },
          "options": {}
        },
        "id": "c8682d0d-5340-4356-8f49-edbf8cb543f2",
        "name": "Upload file",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          480,
          700
        ],
        "credentials": {
          "openAiApi": {
            "id": "erBLFgb3zHf0C8ux",
            "name": "Open Ai - Cobrança"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.openai.com/v1/threads",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "openAiApi",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "OpenAI-Beta",
                "value": "assistants=v2"
              }
            ]
          },
          "options": {}
        },
        "id": "25e9b9f0-e0df-4b27-9f94-1d8fa07b7818",
        "name": "Criar Thread",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -100,
          960
        ],
        "credentials": {
          "openAiApi": {
            "id": "erBLFgb3zHf0C8ux",
            "name": "Open Ai - Cobrança"
          }
        }
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "f94494b6-f899-4f88-8635-3ea97abddb2f",
        "name": "When chat message received",
        "type": "@n8n/n8n-nodes-langchain.chatTrigger",
        "typeVersion": 1.1,
        "position": [
          -300,
          1140
        ],
        "webhookId": "1f810b42-4956-42e7-93ac-12d87c96f231"
      }
    ],
    "connections": {
      "Get Run Status": {
        "main": [
          [
            {
              "node": "Switch",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait": {
        "main": [
          [
            {
              "node": "Get Run Status",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Criar a Mensagem": {
        "main": [
          [
            {
              "node": "Run Assistant",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Se for rate_limit_exceeded": {
        "main": [
          [],
          [
            {
              "node": "Coloca novamente a mensagem para re-processar",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Run Assistant": {
        "main": [
          [
            {
              "node": "Get Run Status",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Espera o tempo determinado": {
        "main": [
          [
            {
              "node": "Get Run Status",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Coloca novamente a mensagem para re-processar": {
        "main": [
          [
            {
              "node": "Criar a Mensagem",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch": {
        "main": [
          [
            {
              "node": "Wait",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Wait",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Se for rate_limit_exceeded",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Pega resposta",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Pega resposta": {
        "main": [
          [
            {
              "node": "Resposta Chat",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Mensagem": {
        "main": [
          [
            {
              "node": "Criar a Mensagem",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code": {
        "main": [
          [
            {
              "node": "Upload file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Pegar o arquivo pelo link": {
        "main": [
          [
            {
              "node": "Code",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Criar Thread": {
        "main": [
          []
        ]
      },
      "When chat message received": {
        "main": [
          [
            {
              "node": "Mensagem",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "2670932b-6d74-4ed1-8fd5-a1cb614f33b1",
    "triggerCount": 0,
    "tags": []
  }
}